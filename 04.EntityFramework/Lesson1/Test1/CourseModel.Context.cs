//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test1
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MyCourseDBEntities : DbContext
    {
        public MyCourseDBEntities()
            : base("name=MyCourseDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cours> Courses { get; set; }
        public virtual DbSet<LessonDetail> LessonDetails { get; set; }
        public virtual DbSet<Lesson> Lessons { get; set; }
        public virtual DbSet<StudentCours> StudentCourses { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<TeacherCours> TeacherCourses { get; set; }
        public virtual DbSet<Teacher> Teachers { get; set; }
        public virtual DbSet<TeachersLesson> TeachersLessons { get; set; }
    
        public virtual int AddStudent(string name, string surname)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddStudent", nameParameter, surnameParameter);
        }
    
        public virtual int SoftDeletedStudent(Nullable<int> deletedID)
        {
            var deletedIDParameter = deletedID.HasValue ?
                new ObjectParameter("DeletedID", deletedID) :
                new ObjectParameter("DeletedID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SoftDeletedStudent", deletedIDParameter);
        }
    
        public virtual int UpdateStudent(Nullable<int> updateID, string name, string surname)
        {
            var updateIDParameter = updateID.HasValue ?
                new ObjectParameter("UpdateID", updateID) :
                new ObjectParameter("UpdateID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStudent", updateIDParameter, nameParameter, surnameParameter);
        }
    }
}
